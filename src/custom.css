.bg-white{ background:white }
.rounded{ border-radius:0.5rem }
.rounded-md{ border-radius:0.375rem }
.shadow{ box-shadow:0 6px 18px rgba(17,24,39,0.06) }
.text-center{ text-align:center }
.p-4{ padding:1rem }
.p-6{ padding:1.5rem }
.p-8{ padding:2rem }
.mb-4{ margin-bottom:1rem }
.mb-6{ margin-bottom:1.5rem }
.mt-2{ margin-top:0.5rem }
.flex{ display:flex }
.items-center{ align-items:center }
.justify-between{ justify-content:space-between }
.gap-4{ gap:1rem }
.grid{ display:grid }
.grid-cols-1{ grid-template-columns: repeat(1, minmax(0,1fr)) }
@media(min-width:640px){ .sm\:grid-cols-2{ grid-template-columns:repeat(2,1fr) } }
@media(min-width:1024px){ .lg\:grid-cols-3{ grid-template-columns:repeat(3,1fr) } }


/* small helpers only */
.inline-block{ display:inline-block }
.font-semibold{ font-weight:600 }
.font-bold{ font-weight:700 }
.text-2xl{ font-size:1.5rem }
.text-4xl{ font-size:2.25rem }
.h-48{ height:12rem }
.w-24{ width:6rem }
.h-24{ height:6rem }


/* Buttons */
button{ cursor:pointer }


/* Responsive container used in header */
.header .container{ display:flex; align-items:center; justify-content:space-between }


/* small page layout */
main{ max-width:1100px; margin:0 auto }

html, body, #root {
  height: 100%;
  margin: 0;
  padding: 0;
}
@keyframes bounceUp {
  0% {
    opacity: 1;
    transform: translate(-50%, 0);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -20px);
  }
}

.animate-bounceUp {
  animation: bounceUp 0.7s ease-out forwards;
}


/*
1) Create a new Vite React project or CRA project.
2) Copy files into the project structure as shown.
3) Install dependencies: npm install
4) Start dev server: npm run start


This project demonstrates:
- Functional React components and composition
- useState and useMemo used in ProductPage
- Redux Toolkit for cart state (add/increase/decrease/remove/clear)
- Dynamic rendering of products from an array (data/plants.js)
- Event handling for add/increase/decrease/delete buttons
- Header with dynamic cart item count


If you'd like, I can:
- Convert styling to Tailwind properly
- Make the project scaffolded automatically with a bash script
- Add unit tests or e2e tests
- Create the GitHub repo steps and a README.md with images and screenshots
*/

